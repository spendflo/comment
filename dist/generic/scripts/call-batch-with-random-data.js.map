{
  "version": 3,
  "sources": ["scripts/call-batch-with-random-data.ts", "common/const/Urls.ts", "common/const/Ids.ts"],
  "sourcesContent": ["#!/usr/bin/env -S node --enable-source-maps\n\nimport 'dotenv/config.js';\nimport yargs from 'yargs';\nimport * as jsonwebtoken from 'jsonwebtoken';\nimport { v4 as uuid } from 'uuid';\nimport { CORD_APPLICATION_ID } from 'common/const/Ids.ts';\n\nasync function main() {\n  const argv = yargs(process.argv.slice(2)).option({\n    host: {\n      description: 'API host to use (ex: api.cord.com)',\n      type: 'string',\n      default: `local.cord.com:8161`,\n    },\n    organizations: {\n      description:\n        'the number of organizations to create within the platform app',\n      type: 'number',\n      default: 1,\n    },\n    users: {\n      description: 'the number of users to create within each organization',\n      type: 'number',\n      default: 10,\n    },\n  }).argv;\n\n  const { host, users: userCount, organizations: orgCount } = argv;\n\n  console.time('Got access token');\n\n  const authorizeResponse = await fetch(`https://${host}/v1/authorize`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      signed_app_token: jsonwebtoken.sign(\n        { app_id: CORD_APPLICATION_ID },\n        'cordrulez',\n        { expiresIn: '1 min', algorithm: 'HS512' },\n      ),\n    }),\n  });\n\n  const { access_token } = await authorizeResponse.json();\n\n  console.timeEnd('Got access token');\n\n  console.time('Generated data');\n\n  const users = Array.from({ length: userCount * orgCount }).map(\n    (_, index) => ({\n      id: uuid(),\n      name: `user ${index}`,\n      email: `user-${index}@cord.com`,\n      first_name: `user`,\n      last_name: `${index}`,\n    }),\n  );\n\n  const organizations = Array.from({ length: orgCount }).map((_, index) => ({\n    id: uuid(),\n    name: `organization ${index}`,\n    members: users\n      .slice(index * userCount, (index + 1) * userCount)\n      .map(({ id }) => id),\n  }));\n\n  console.timeEnd('Generated data');\n\n  console.time('POST batch data');\n  const batchResponse = await fetch(`https://${host}/v1/batch`, {\n    method: 'post',\n    headers: {\n      Authorization: `Bearer ${access_token}`,\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ users, organizations }),\n  });\n\n  console.timeEnd('POST batch data');\n\n  const text = await batchResponse.text();\n\n  console.log(text);\n}\n\nmain().then(\n  () => process.exit(0),\n  (err) => {\n    console.error(err);\n    process.exit(1);\n  },\n);\n", "// This is for important URLs to all kinds of services\n\nexport const TOP_SERVER_HOST = process.env.TOP_SERVER_HOST!;\nexport const APP_SERVER_HOST = process.env.APP_SERVER_HOST!;\nexport const API_SERVER_HOST = process.env.API_SERVER_HOST!;\nexport const API_SERVER_HOST_PRODUCTION =\n  process.env.API_SERVER_HOST_PRODUCTION!;\nexport const ADMIN_SERVER_HOST = process.env.ADMIN_SERVER_HOST!;\nexport const CONSOLE_SERVER_HOST = process.env.CONSOLE_SERVER_HOST!;\nexport const MARKETING_SERVER_HOST = process.env.MARKETING_SERVER_HOST!;\nexport const CORD_TO_HOST = process.env.CORD_TO_HOST!;\nexport const AUTH0_CUSTOM_LOGIN_DOMAIN = process.env.AUTH0_CUSTOM_LOGIN_DOMAIN!;\nexport const DOCS_SERVER_HOST = process.env.DOCS_SERVER_HOST!;\nexport const SLACK_APP_REDIRECT_HOST = process.env.SLACK_APP_REDIRECT_HOST;\n\nexport const TOP_ORIGIN = 'https://' + process.env.TOP_SERVER_HOST;\nexport const APP_ORIGIN = 'https://' + process.env.APP_SERVER_HOST;\nexport const API_ORIGIN = 'https://' + process.env.API_SERVER_HOST;\nexport const ADMIN_ORIGIN = 'https://' + process.env.ADMIN_SERVER_HOST;\nexport const CONSOLE_ORIGIN = 'https://' + process.env.CONSOLE_SERVER_HOST;\nexport const MARKETING_ORIGIN = 'https://' + process.env.MARKETING_SERVER_HOST;\nexport const CORD_TO_ORIGIN = 'https://' + process.env.CORD_TO_HOST;\nexport const AUTH0_ORIGIN = 'https://' + process.env.AUTH0_CUSTOM_LOGIN_DOMAIN;\nexport const DOCS_ORIGIN = 'https://' + process.env.DOCS_SERVER_HOST;\nexport const DOCS_AI_CHATBOT_SERVER_HOST =\n  process.env.DOCS_AI_CHATBOT_SERVER_HOST;\nexport const COMMUNITY_ORIGIN = 'https://' + process.env.COMMUNITY_SERVER_HOST;\n\n// See https://github.com/getcord/interactive-demos\nexport const DEMO_APPS_WEBHOOK_URL =\n  'https://cord-interactive-demos.vercel.app/events';\n", "import { DOCS_ORIGIN } from 'common/const/Urls.ts';\n\nexport const SUPPORT_USER_UUID = 'c9a61e1d-7c8a-4c7e-838a-9d431cf4ed77';\nexport const RADICAL_ORG_ID = '6bba8678-b14e-4af7-b2f2-05ee807dfa82';\nexport const RADICAL_TEST_ORG_ID = '3689f86d-0c70-40de-a2f0-a4a9ea4994e3';\nexport const CORD_PLATFORM_ORG_ID = '746c0b57-7363-4766-9ee9-7ae8ec7531a8';\nexport const CORD_ADMIN_PLATFORM_ORG_ID =\n  '84ae9086-8414-4ed3-ab73-096e6438f095';\nexport const CORD_SDK_TEST_ORG_ID = 'edda098d-6db7-4202-a5ac-ff3293b78c47';\nexport const GILLIAN_TEST_SLACK_ORG_ID = 'f7ab9ab8-f5b2-41a4-a419-1b8076626d3f';\nexport const KAT_TEST_SLACK_ORG_ID = '4506fadd-f8dc-4795-9b5d-d28feda39d84';\nexport const CORD_SLACK_TEAM_ID = 'T012Y0TBQLW'; // radicalhqworkspace\nexport const CORD_TEST_SLACK_TEAM_ID = 'T015UJY6YQK'; // radicaltestorg\n\nexport const SLACK_APP_CLIENT_ID = '1100027398710.1180115520790';\nexport const SLACK_APP_ID = 'A015A3DFAP8';\nexport const SLACK_DEV_APP_CLIENT_ID = '1198644236835.1943446227956';\nexport const SLACK_ADMIN_LOGIN_APP_CLIENT_ID = '1100027398710.2437628320357';\nexport const SLACK_ADMIN_LOGIN_APP_ID = 'A02CVJG9EAH';\nexport const SLACK_DEV_APP_ID = 'A01TRD46PU4';\nexport const SLACK_INTERNAL_TOOLS_APP_ID = 'A04JKM945CM';\nexport const CORD_UPDATES_TEST_CHANNEL_ID = 'C0547K3V868';\n\n// As opposed to e.g. a customer's Slack app\nexport const CORD_SLACK_APP_IDS = [\n  SLACK_APP_ID,\n  SLACK_DEV_APP_ID,\n  SLACK_ADMIN_LOGIN_APP_ID,\n  SLACK_INTERNAL_TOOLS_APP_ID,\n];\n\nexport const CORD_APPLICATION_ID = '5a076ee9-8b9e-4156-9ac4-871bdc4569ec';\nexport const CORD_SDK_TEST_APPLICATION_ID =\n  'b6501bf5-46f7-4db7-9996-c42dd9f758b0';\nexport const CORD_SAMPLE_TOKEN_CUSTOMER_ID =\n  '1c367aca-37c9-4733-8bef-e9f11a7d0f17';\nexport const CORD_DEMO_APPS_TOKEN_CUSTOMER_ID =\n  '4383cf39-8b6a-4c33-9d8a-71567ed47a60';\nexport const CORD_DOCS_SAMPLE_TOKEN_APPLICATION_ID =\n  'aeb2797f-f0a3-485c-a317-4986e2c8343b';\nexport const CORD_AUTOMATED_TESTS_APPLICATION_ID =\n  'dfa86152-9e7e-4d2d-acd6-bfddef71f58e';\nexport const CLACK_APPLICATION_ID = '5fa22ba9-5446-4af8-bc93-7ce54a9aa0ba';\nexport const CORD_HOMEPAGE_APPLICATION_ID =\n  '29e6499a-bbed-4eb2-b057-b36d60ad76c9';\nexport const AUTH0_CLIENT_ID = process.env.AUTH0_CLIENT_ID!;\n\nexport const CORD_CUSTOMER_ID = '12ed6251-28d5-4686-9a75-20a15bd31499';\n\nexport const CSS_CUSTOMIZATION_ON_DOCS_PREFIX = 'css-customization-';\nexport const BETA_V2_DOCS_PREFIX = 'beta2-';\nexport const LIVE_CSS_ON_DOCS_THREAD_ID_PREFIX = 'live-css-docs-thread-';\nexport const LIVE_COMPONENT_ON_DOCS_THREAD_ID_PREFIX =\n  'live-component-docs-thread-';\nexport const LIVE_COMPONENT_INBOX_THREAD_ID_PREFIX =\n  'live_component-docs-inbox-thread-';\nexport const LIVE_COMPONENT_INBOX_LAUNCHER_THREAD_ID_PREFIX =\n  'live_component-docs-inbox-launcher-thread-';\nexport const LIVE_COMPONENT_ON_DOCS_COMPOSER_THREAD_ID_PREFIX =\n  'live-component-docs-composer-thread-';\nexport const LIVE_COMPONENT_ON_DOCS_MESSAGE_THREAD_ID_PREFIX =\n  'live-component-docs-message-thread-';\nexport const LIVE_COMPONENT_ON_DOCS_MESSAGE_CONTENT_THREAD_ID_PREFIX =\n  'live-component-docs-message-content-thread-';\nexport const LIVE_COMPONENT_ON_DOCS_PIN_THREAD_ID_PREFIX =\n  'live-component-docs-pin-thread-';\nexport const LIVE_COMPONENT_ON_DOCS_REACTIONS_THREAD_ID_PREFIX =\n  'live-component-docs-reactions-thread-';\nexport const LIVE_COMPONENT_ON_DOCS_EXTERNAL_NOTIFICATION_PREFIX =\n  'live-component-docs-external-notification-';\nexport const LIVE_CUSTOMIZATION_ON_DOCS_REPLACEMENTS_THREAD_ID_PREFIX =\n  'live-customization-docs-replacements-thread-';\nexport const DOCS_TOKEN_KEY = 'docs-token';\n\nexport const LIVE_COMPONENT_ON_DOCS_NO_AVATAR_USER_ID = 'noavatar';\n\nexport const DOCS_LIVE_PAGE_LOCATIONS = {\n  cssCustomization: 'css-customization',\n  liveCss: 'live-css-docs',\n  liveThread: 'live-thread',\n  liveThreadList: 'live-thread-list',\n  livePin: 'live-pin',\n  livePinChartExample: 'live-pin-chart-example',\n  liveFloatingThreads: 'live-floating-threads',\n  liveSelectionComments: 'live-selection-comments',\n  liveSidebar: 'live-sidebar',\n  liveInbox: 'live-inbox',\n  liveInboxLauncher: 'live-inbox-launcher',\n  liveSidebarLauncher: 'live-sidebar-launcher',\n  livePagePresence: 'live-page-presence',\n  livePresenceFacepile: 'live-presence-facepile',\n  liveComposer: 'live-composer',\n  liveMessage: 'live-message',\n  liveMessageContent: 'live-message-content',\n  liveNotificationList: 'live-notification-list',\n  liveThreadedComments: 'live-threaded-comments',\n  liveReactions: 'live-reactions',\n  liveReplacementsTutorial: 'live-replacements-tutorial',\n  liveBetaV2Thread: 'live-beta-v2-thread',\n  liveBetaV2Threads: 'live-beta-v2-threads',\n};\n\nexport const CORD_DOCS_CLIENT_TOKEN = '__cord_docs_token__';\n\nexport const DOCS_URLS = {\n  tutorials: {\n    getProductionReady: {\n      addYourBranding: `${DOCS_ORIGIN}/get-started/live-css-editor`,\n    },\n    integrationGuide: `${DOCS_ORIGIN}/get-started/integration-guide`,\n    demoApps: `${DOCS_ORIGIN}/get-started/demo-apps`,\n  },\n  components: {\n    thread: `${DOCS_ORIGIN}/components/cord-thread`,\n    threadList: `${DOCS_ORIGIN}/components/cord-thread-list`,\n    threadedComments: `${DOCS_ORIGIN}/components/cord-threaded-comments`,\n    sidebar: `${DOCS_ORIGIN}/components/cord-sidebar`,\n    inbox: `${DOCS_ORIGIN}/components/cord-inbox`,\n    inboxLauncher: `${DOCS_ORIGIN}/components/cord-inbox-launcher`,\n    sidebarLauncher: `${DOCS_ORIGIN}/components/cord-sidebar-launcher`,\n    composer: `${DOCS_ORIGIN}/components/cord-composer`,\n    message: `${DOCS_ORIGIN}/components/cord-message`,\n    messageContent: `${DOCS_ORIGIN}/components/cord-message-content`,\n    reactions: `${DOCS_ORIGIN}/components/cord-reactions`,\n  },\n  howTo: {\n    customThreadedComments: `${DOCS_ORIGIN}/customization/custom-threaded-comments`,\n    cssCustomization: `${DOCS_ORIGIN}/customization/css`,\n    replacements: `${DOCS_ORIGIN}/customization/custom-react-components/tutorial`,\n  },\n  getStarted: {\n    authenticateYourUser: `${DOCS_ORIGIN}/get-started/integration-guide/generate-an-auth-token`,\n  },\n  betaV2Components: {\n    threads: `${DOCS_ORIGIN}/components/cord-threads?version=2.0`,\n    thread: `${DOCS_ORIGIN}/components/cord-thread?version=2.0`,\n  },\n};\n\nexport const CORD_DEV_CONSOLE_LOGGING_SLACK_CHANNEL_ID = 'C05FAVBSSN7';\nexport const CORD_SELF_SERVE_SLACK_CHANNEL_ID = 'C05GR4WSV5Z';\n\n// Tokens created for the sample token and demo apps environment types both\n// create groups with this id.  Both of them need to use the same groupID because\n// it is hardcoded into the demo apps client code, and while the demo apps mostly\n// use the demo apps environment apps, they sometimes use sample app tokens.\nexport const DEMO_APPS_APP_GROUP_ID = 'my-first-group';\n"],
  "mappings": "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",
  "names": []
}
