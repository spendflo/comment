{"version":3,"file":"index.umd.js","sources":["../src/createIsolation.tsx","../src/ScopeProvider.tsx"],"sourcesContent":["import { createContext, useContext, useRef } from 'react';\nimport type { ReactNode } from 'react';\nimport { createStore } from 'jotai/vanilla';\nimport {\n  useAtom as useAtomOrig,\n  useAtomValue as useAtomValueOrig,\n  useSetAtom as useSetAtomOrig,\n} from 'jotai/react';\nimport { useHydrateAtoms } from 'jotai/react/utils';\n\ntype Store = ReturnType<typeof createStore>;\ntype InitialValues = Parameters<typeof useHydrateAtoms>[0];\n\nexport function createIsolation() {\n  const StoreContext = createContext<Store | null>(null);\n\n  const Provider = ({\n    store,\n    initialValues = [] as unknown as InitialValues,\n    children,\n  }: {\n    store?: Store;\n    initialValues?: InitialValues;\n    children: ReactNode;\n  }) => {\n    const storeRef = useRef(store);\n    if (!storeRef.current) {\n      storeRef.current = createStore();\n    }\n    useHydrateAtoms(initialValues, { store: storeRef.current });\n    return (\n      <StoreContext.Provider value={storeRef.current}>\n        {children}\n      </StoreContext.Provider>\n    );\n  };\n\n  const useAtom = ((anAtom: any, options?: any) => {\n    const store = useContext(StoreContext);\n    if (!store) {\n      throw new Error('Missing Provider from createIsolation');\n    }\n    return useAtomOrig(anAtom, { store, ...options });\n  }) as typeof useAtomOrig;\n\n  const useAtomValue = ((anAtom: any, options?: any) => {\n    const store = useContext(StoreContext);\n    if (!store) {\n      throw new Error('Missing Provider from createIsolation');\n    }\n    return useAtomValueOrig(anAtom, { store, ...options });\n  }) as typeof useAtomValueOrig;\n\n  const useSetAtom = ((anAtom: any, options?: any) => {\n    const store = useContext(StoreContext);\n    if (!store) {\n      throw new Error('Missing Provider from createIsolation');\n    }\n    return useSetAtomOrig(anAtom, { store, ...options });\n  }) as typeof useSetAtomOrig;\n\n  return { Provider, useAtom, useAtomValue, useSetAtom };\n}\n","import { createContext, useContext, useState } from 'react';\nimport type { ReactNode } from 'react';\nimport { Provider, useStore } from 'jotai/react';\nimport type { Atom, WritableAtom } from 'jotai/vanilla';\n\ntype AnyAtom = Atom<unknown>;\ntype AnyWritableAtom = WritableAtom<unknown, unknown[], unknown>;\ntype GetScopedAtom = <T extends AnyAtom>(anAtom: T) => T;\n\nconst isEqualSet = (a: Set<unknown>, b: Set<unknown>) =>\n  a === b || (a.size === b.size && Array.from(a).every((v) => b.has(v)));\n\nexport const ScopeContext = createContext<GetScopedAtom>((a) => a);\n\nexport const ScopeProvider = ({\n  atoms,\n  children,\n}: {\n  atoms: Iterable<AnyAtom>;\n  children: ReactNode;\n}) => {\n  const store = useStore();\n  const getParentScopedAtom = useContext(ScopeContext);\n  const atomSet = new Set(atoms);\n\n  const initialize = () => {\n    const mapping = new WeakMap<AnyAtom, AnyAtom>();\n    const createScopedAtom = <T extends AnyWritableAtom>(\n      anAtom: T,\n      delegate: boolean,\n    ): T => {\n      const getAtom = <A extends AnyAtom>(\n        thisArg: AnyAtom,\n        orig: AnyAtom,\n        target: A,\n      ): A => {\n        if (target === thisArg) {\n          return delegate ? getParentScopedAtom(orig as A) : target;\n        }\n        return getScopedAtom(target);\n      };\n      const scopedAtom: typeof anAtom = {\n        ...anAtom,\n        ...('read' in anAtom && {\n          read(get, opts) {\n            return anAtom.read.call(\n              this,\n              (a) => get(getAtom(this, anAtom, a)),\n              opts,\n            );\n          },\n        }),\n        ...('write' in anAtom && {\n          write(get, set, ...args) {\n            return anAtom.write.call(\n              this,\n              (a) => get(getAtom(this, anAtom, a)),\n              (a, ...v) => set(getAtom(this, anAtom, a), ...v),\n              ...args,\n            );\n          },\n        }),\n      };\n      return scopedAtom;\n    };\n\n    const getScopedAtom: GetScopedAtom = (anAtom) => {\n      let scopedAtom = mapping.get(anAtom);\n      if (!scopedAtom) {\n        scopedAtom = atomSet.has(anAtom)\n          ? createScopedAtom(anAtom as unknown as AnyWritableAtom, false)\n          : createScopedAtom(anAtom as unknown as AnyWritableAtom, true);\n        mapping.set(anAtom, scopedAtom);\n      }\n      return scopedAtom as typeof anAtom;\n    };\n\n    const patchedStore: typeof store = {\n      ...store,\n      get: (anAtom, ...args) => store.get(getScopedAtom(anAtom), ...args),\n      set: (anAtom, ...args) => store.set(getScopedAtom(anAtom), ...args),\n      sub: (anAtom, ...args) => store.sub(getScopedAtom(anAtom), ...args),\n    };\n\n    return [\n      patchedStore,\n      getScopedAtom,\n      store,\n      getParentScopedAtom,\n      atomSet,\n    ] as const;\n  };\n\n  const [state, setState] = useState(initialize);\n  if (\n    store !== state[2] ||\n    getParentScopedAtom !== state[3] ||\n    !isEqualSet(atomSet, state[4])\n  ) {\n    setState(initialize);\n  }\n  const [patchedStore, getScopedAtom] = state;\n\n  return (\n    <ScopeContext.Provider value={getScopedAtom}>\n      <Provider store={patchedStore}>{children}</Provider>\n    </ScopeContext.Provider>\n  );\n};\n"],"names":["createIsolation","StoreContext","createContext","Provider","_ref","store","_ref$initialValues","initialValues","children","storeRef","useRef","current","createStore","useHydrateAtoms","_jsx","value","useAtom","anAtom","options","useContext","Error","useAtomOrig","_extends","useAtomValue","useAtomValueOrig","useSetAtom","useSetAtomOrig","isEqualSet","a","b","size","Array","from","every","v","has","ScopeContext","ScopeProvider","atoms","useStore","getParentScopedAtom","atomSet","Set","initialize","mapping","WeakMap","createScopedAtom","delegate","getAtom","thisArg","orig","target","getScopedAtom","scopedAtom","read","get","opts","_this2","call","write","set","_anAtom$write","_this3","_this","apply","concat","slice","arguments","patchedStore","sub","_useState","useState","state","setState"],"mappings":"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"}