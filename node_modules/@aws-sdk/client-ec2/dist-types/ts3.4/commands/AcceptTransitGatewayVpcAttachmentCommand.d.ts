import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  EC2ClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../EC2Client";
import {
  AcceptTransitGatewayVpcAttachmentRequest,
  AcceptTransitGatewayVpcAttachmentResult,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface AcceptTransitGatewayVpcAttachmentCommandInput
  extends AcceptTransitGatewayVpcAttachmentRequest {}
export interface AcceptTransitGatewayVpcAttachmentCommandOutput
  extends AcceptTransitGatewayVpcAttachmentResult,
    __MetadataBearer {}
export declare class AcceptTransitGatewayVpcAttachmentCommand extends $Command<
  AcceptTransitGatewayVpcAttachmentCommandInput,
  AcceptTransitGatewayVpcAttachmentCommandOutput,
  EC2ClientResolvedConfig
> {
  readonly input: AcceptTransitGatewayVpcAttachmentCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: AcceptTransitGatewayVpcAttachmentCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: EC2ClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    AcceptTransitGatewayVpcAttachmentCommandInput,
    AcceptTransitGatewayVpcAttachmentCommandOutput
  >;
  private serialize;
  private deserialize;
}
