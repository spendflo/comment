import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  EC2ClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../EC2Client";
import {
  DescribeTrunkInterfaceAssociationsRequest,
  DescribeTrunkInterfaceAssociationsResult,
} from "../models/models_4";
export { __MetadataBearer, $Command };
export interface DescribeTrunkInterfaceAssociationsCommandInput
  extends DescribeTrunkInterfaceAssociationsRequest {}
export interface DescribeTrunkInterfaceAssociationsCommandOutput
  extends DescribeTrunkInterfaceAssociationsResult,
    __MetadataBearer {}
export declare class DescribeTrunkInterfaceAssociationsCommand extends $Command<
  DescribeTrunkInterfaceAssociationsCommandInput,
  DescribeTrunkInterfaceAssociationsCommandOutput,
  EC2ClientResolvedConfig
> {
  readonly input: DescribeTrunkInterfaceAssociationsCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: DescribeTrunkInterfaceAssociationsCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: EC2ClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    DescribeTrunkInterfaceAssociationsCommandInput,
    DescribeTrunkInterfaceAssociationsCommandOutput
  >;
  private serialize;
  private deserialize;
}
