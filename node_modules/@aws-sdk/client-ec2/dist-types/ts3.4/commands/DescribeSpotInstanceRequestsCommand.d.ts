import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  EC2ClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../EC2Client";
import {
  DescribeSpotInstanceRequestsRequest,
  DescribeSpotInstanceRequestsResult,
} from "../models/models_4";
export { __MetadataBearer, $Command };
export interface DescribeSpotInstanceRequestsCommandInput
  extends DescribeSpotInstanceRequestsRequest {}
export interface DescribeSpotInstanceRequestsCommandOutput
  extends DescribeSpotInstanceRequestsResult,
    __MetadataBearer {}
export declare class DescribeSpotInstanceRequestsCommand extends $Command<
  DescribeSpotInstanceRequestsCommandInput,
  DescribeSpotInstanceRequestsCommandOutput,
  EC2ClientResolvedConfig
> {
  readonly input: DescribeSpotInstanceRequestsCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: DescribeSpotInstanceRequestsCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: EC2ClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    DescribeSpotInstanceRequestsCommandInput,
    DescribeSpotInstanceRequestsCommandOutput
  >;
  private serialize;
  private deserialize;
}
