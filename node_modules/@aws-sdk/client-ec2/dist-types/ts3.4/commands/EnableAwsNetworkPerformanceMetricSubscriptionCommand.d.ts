import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  EC2ClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../EC2Client";
import {
  EnableAwsNetworkPerformanceMetricSubscriptionRequest,
  EnableAwsNetworkPerformanceMetricSubscriptionResult,
} from "../models/models_5";
export { __MetadataBearer, $Command };
export interface EnableAwsNetworkPerformanceMetricSubscriptionCommandInput
  extends EnableAwsNetworkPerformanceMetricSubscriptionRequest {}
export interface EnableAwsNetworkPerformanceMetricSubscriptionCommandOutput
  extends EnableAwsNetworkPerformanceMetricSubscriptionResult,
    __MetadataBearer {}
export declare class EnableAwsNetworkPerformanceMetricSubscriptionCommand extends $Command<
  EnableAwsNetworkPerformanceMetricSubscriptionCommandInput,
  EnableAwsNetworkPerformanceMetricSubscriptionCommandOutput,
  EC2ClientResolvedConfig
> {
  readonly input: EnableAwsNetworkPerformanceMetricSubscriptionCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: EnableAwsNetworkPerformanceMetricSubscriptionCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: EC2ClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    EnableAwsNetworkPerformanceMetricSubscriptionCommandInput,
    EnableAwsNetworkPerformanceMetricSubscriptionCommandOutput
  >;
  private serialize;
  private deserialize;
}
