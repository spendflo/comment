import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  EC2ClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../EC2Client";
import {
  DescribeIdFormatRequest,
  DescribeIdFormatResult,
} from "../models/models_3";
export { __MetadataBearer, $Command };
export interface DescribeIdFormatCommandInput extends DescribeIdFormatRequest {}
export interface DescribeIdFormatCommandOutput
  extends DescribeIdFormatResult,
    __MetadataBearer {}
export declare class DescribeIdFormatCommand extends $Command<
  DescribeIdFormatCommandInput,
  DescribeIdFormatCommandOutput,
  EC2ClientResolvedConfig
> {
  readonly input: DescribeIdFormatCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: DescribeIdFormatCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: EC2ClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<DescribeIdFormatCommandInput, DescribeIdFormatCommandOutput>;
  private serialize;
  private deserialize;
}
