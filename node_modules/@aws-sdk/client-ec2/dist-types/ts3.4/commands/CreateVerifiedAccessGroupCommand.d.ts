import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  EC2ClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../EC2Client";
import {
  CreateVerifiedAccessGroupRequest,
  CreateVerifiedAccessGroupResult,
} from "../models/models_2";
export { __MetadataBearer, $Command };
export interface CreateVerifiedAccessGroupCommandInput
  extends CreateVerifiedAccessGroupRequest {}
export interface CreateVerifiedAccessGroupCommandOutput
  extends CreateVerifiedAccessGroupResult,
    __MetadataBearer {}
export declare class CreateVerifiedAccessGroupCommand extends $Command<
  CreateVerifiedAccessGroupCommandInput,
  CreateVerifiedAccessGroupCommandOutput,
  EC2ClientResolvedConfig
> {
  readonly input: CreateVerifiedAccessGroupCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: CreateVerifiedAccessGroupCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: EC2ClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    CreateVerifiedAccessGroupCommandInput,
    CreateVerifiedAccessGroupCommandOutput
  >;
  private serialize;
  private deserialize;
}
