import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  EC2ClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../EC2Client";
import {
  DescribeInstanceAttributeRequest,
  InstanceAttribute,
} from "../models/models_3";
export { __MetadataBearer, $Command };
export interface DescribeInstanceAttributeCommandInput
  extends DescribeInstanceAttributeRequest {}
export interface DescribeInstanceAttributeCommandOutput
  extends InstanceAttribute,
    __MetadataBearer {}
export declare class DescribeInstanceAttributeCommand extends $Command<
  DescribeInstanceAttributeCommandInput,
  DescribeInstanceAttributeCommandOutput,
  EC2ClientResolvedConfig
> {
  readonly input: DescribeInstanceAttributeCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: DescribeInstanceAttributeCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: EC2ClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    DescribeInstanceAttributeCommandInput,
    DescribeInstanceAttributeCommandOutput
  >;
  private serialize;
  private deserialize;
}
