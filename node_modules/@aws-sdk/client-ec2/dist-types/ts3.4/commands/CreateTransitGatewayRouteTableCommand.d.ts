import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  EC2ClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../EC2Client";
import {
  CreateTransitGatewayRouteTableRequest,
  CreateTransitGatewayRouteTableResult,
} from "../models/models_2";
export { __MetadataBearer, $Command };
export interface CreateTransitGatewayRouteTableCommandInput
  extends CreateTransitGatewayRouteTableRequest {}
export interface CreateTransitGatewayRouteTableCommandOutput
  extends CreateTransitGatewayRouteTableResult,
    __MetadataBearer {}
export declare class CreateTransitGatewayRouteTableCommand extends $Command<
  CreateTransitGatewayRouteTableCommandInput,
  CreateTransitGatewayRouteTableCommandOutput,
  EC2ClientResolvedConfig
> {
  readonly input: CreateTransitGatewayRouteTableCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: CreateTransitGatewayRouteTableCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: EC2ClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    CreateTransitGatewayRouteTableCommandInput,
    CreateTransitGatewayRouteTableCommandOutput
  >;
  private serialize;
  private deserialize;
}
