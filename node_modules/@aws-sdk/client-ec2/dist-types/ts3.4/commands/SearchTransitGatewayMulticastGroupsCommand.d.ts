import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  EC2ClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../EC2Client";
import {
  SearchTransitGatewayMulticastGroupsRequest,
  SearchTransitGatewayMulticastGroupsResult,
} from "../models/models_7";
export { __MetadataBearer, $Command };
export interface SearchTransitGatewayMulticastGroupsCommandInput
  extends SearchTransitGatewayMulticastGroupsRequest {}
export interface SearchTransitGatewayMulticastGroupsCommandOutput
  extends SearchTransitGatewayMulticastGroupsResult,
    __MetadataBearer {}
export declare class SearchTransitGatewayMulticastGroupsCommand extends $Command<
  SearchTransitGatewayMulticastGroupsCommandInput,
  SearchTransitGatewayMulticastGroupsCommandOutput,
  EC2ClientResolvedConfig
> {
  readonly input: SearchTransitGatewayMulticastGroupsCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: SearchTransitGatewayMulticastGroupsCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: EC2ClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    SearchTransitGatewayMulticastGroupsCommandInput,
    SearchTransitGatewayMulticastGroupsCommandOutput
  >;
  private serialize;
  private deserialize;
}
