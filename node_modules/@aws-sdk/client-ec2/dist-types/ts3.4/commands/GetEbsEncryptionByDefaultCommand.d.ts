import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  EC2ClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../EC2Client";
import {
  GetEbsEncryptionByDefaultRequest,
  GetEbsEncryptionByDefaultResult,
} from "../models/models_5";
export { __MetadataBearer, $Command };
export interface GetEbsEncryptionByDefaultCommandInput
  extends GetEbsEncryptionByDefaultRequest {}
export interface GetEbsEncryptionByDefaultCommandOutput
  extends GetEbsEncryptionByDefaultResult,
    __MetadataBearer {}
export declare class GetEbsEncryptionByDefaultCommand extends $Command<
  GetEbsEncryptionByDefaultCommandInput,
  GetEbsEncryptionByDefaultCommandOutput,
  EC2ClientResolvedConfig
> {
  readonly input: GetEbsEncryptionByDefaultCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: GetEbsEncryptionByDefaultCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: EC2ClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    GetEbsEncryptionByDefaultCommandInput,
    GetEbsEncryptionByDefaultCommandOutput
  >;
  private serialize;
  private deserialize;
}
