import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  EC2ClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../EC2Client";
import {
  CreateTransitGatewayConnectPeerRequest,
  CreateTransitGatewayConnectPeerResult,
} from "../models/models_2";
export { __MetadataBearer, $Command };
export interface CreateTransitGatewayConnectPeerCommandInput
  extends CreateTransitGatewayConnectPeerRequest {}
export interface CreateTransitGatewayConnectPeerCommandOutput
  extends CreateTransitGatewayConnectPeerResult,
    __MetadataBearer {}
export declare class CreateTransitGatewayConnectPeerCommand extends $Command<
  CreateTransitGatewayConnectPeerCommandInput,
  CreateTransitGatewayConnectPeerCommandOutput,
  EC2ClientResolvedConfig
> {
  readonly input: CreateTransitGatewayConnectPeerCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: CreateTransitGatewayConnectPeerCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: EC2ClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    CreateTransitGatewayConnectPeerCommandInput,
    CreateTransitGatewayConnectPeerCommandOutput
  >;
  private serialize;
  private deserialize;
}
