import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  EC2ClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../EC2Client";
import {
  CreateSubnetCidrReservationRequest,
  CreateSubnetCidrReservationResult,
} from "../models/models_2";
export { __MetadataBearer, $Command };
export interface CreateSubnetCidrReservationCommandInput
  extends CreateSubnetCidrReservationRequest {}
export interface CreateSubnetCidrReservationCommandOutput
  extends CreateSubnetCidrReservationResult,
    __MetadataBearer {}
export declare class CreateSubnetCidrReservationCommand extends $Command<
  CreateSubnetCidrReservationCommandInput,
  CreateSubnetCidrReservationCommandOutput,
  EC2ClientResolvedConfig
> {
  readonly input: CreateSubnetCidrReservationCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: CreateSubnetCidrReservationCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: EC2ClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    CreateSubnetCidrReservationCommandInput,
    CreateSubnetCidrReservationCommandOutput
  >;
  private serialize;
  private deserialize;
}
