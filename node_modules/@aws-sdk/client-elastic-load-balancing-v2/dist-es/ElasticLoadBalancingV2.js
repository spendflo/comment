import { createAggregatedClient } from "@smithy/smithy-client";
import { AddListenerCertificatesCommand, } from "./commands/AddListenerCertificatesCommand";
import { AddTagsCommand } from "./commands/AddTagsCommand";
import { CreateListenerCommand, } from "./commands/CreateListenerCommand";
import { CreateLoadBalancerCommand, } from "./commands/CreateLoadBalancerCommand";
import { CreateRuleCommand } from "./commands/CreateRuleCommand";
import { CreateTargetGroupCommand, } from "./commands/CreateTargetGroupCommand";
import { DeleteListenerCommand, } from "./commands/DeleteListenerCommand";
import { DeleteLoadBalancerCommand, } from "./commands/DeleteLoadBalancerCommand";
import { DeleteRuleCommand } from "./commands/DeleteRuleCommand";
import { DeleteTargetGroupCommand, } from "./commands/DeleteTargetGroupCommand";
import { DeregisterTargetsCommand, } from "./commands/DeregisterTargetsCommand";
import { DescribeAccountLimitsCommand, } from "./commands/DescribeAccountLimitsCommand";
import { DescribeListenerCertificatesCommand, } from "./commands/DescribeListenerCertificatesCommand";
import { DescribeListenersCommand, } from "./commands/DescribeListenersCommand";
import { DescribeLoadBalancerAttributesCommand, } from "./commands/DescribeLoadBalancerAttributesCommand";
import { DescribeLoadBalancersCommand, } from "./commands/DescribeLoadBalancersCommand";
import { DescribeRulesCommand, } from "./commands/DescribeRulesCommand";
import { DescribeSSLPoliciesCommand, } from "./commands/DescribeSSLPoliciesCommand";
import { DescribeTagsCommand, } from "./commands/DescribeTagsCommand";
import { DescribeTargetGroupAttributesCommand, } from "./commands/DescribeTargetGroupAttributesCommand";
import { DescribeTargetGroupsCommand, } from "./commands/DescribeTargetGroupsCommand";
import { DescribeTargetHealthCommand, } from "./commands/DescribeTargetHealthCommand";
import { ModifyListenerCommand, } from "./commands/ModifyListenerCommand";
import { ModifyLoadBalancerAttributesCommand, } from "./commands/ModifyLoadBalancerAttributesCommand";
import { ModifyRuleCommand } from "./commands/ModifyRuleCommand";
import { ModifyTargetGroupAttributesCommand, } from "./commands/ModifyTargetGroupAttributesCommand";
import { ModifyTargetGroupCommand, } from "./commands/ModifyTargetGroupCommand";
import { RegisterTargetsCommand, } from "./commands/RegisterTargetsCommand";
import { RemoveListenerCertificatesCommand, } from "./commands/RemoveListenerCertificatesCommand";
import { RemoveTagsCommand } from "./commands/RemoveTagsCommand";
import { SetIpAddressTypeCommand, } from "./commands/SetIpAddressTypeCommand";
import { SetRulePrioritiesCommand, } from "./commands/SetRulePrioritiesCommand";
import { SetSecurityGroupsCommand, } from "./commands/SetSecurityGroupsCommand";
import { SetSubnetsCommand } from "./commands/SetSubnetsCommand";
import { ElasticLoadBalancingV2Client } from "./ElasticLoadBalancingV2Client";
const commands = {
    AddListenerCertificatesCommand,
    AddTagsCommand,
    CreateListenerCommand,
    CreateLoadBalancerCommand,
    CreateRuleCommand,
    CreateTargetGroupCommand,
    DeleteListenerCommand,
    DeleteLoadBalancerCommand,
    DeleteRuleCommand,
    DeleteTargetGroupCommand,
    DeregisterTargetsCommand,
    DescribeAccountLimitsCommand,
    DescribeListenerCertificatesCommand,
    DescribeListenersCommand,
    DescribeLoadBalancerAttributesCommand,
    DescribeLoadBalancersCommand,
    DescribeRulesCommand,
    DescribeSSLPoliciesCommand,
    DescribeTagsCommand,
    DescribeTargetGroupAttributesCommand,
    DescribeTargetGroupsCommand,
    DescribeTargetHealthCommand,
    ModifyListenerCommand,
    ModifyLoadBalancerAttributesCommand,
    ModifyRuleCommand,
    ModifyTargetGroupCommand,
    ModifyTargetGroupAttributesCommand,
    RegisterTargetsCommand,
    RemoveListenerCertificatesCommand,
    RemoveTagsCommand,
    SetIpAddressTypeCommand,
    SetRulePrioritiesCommand,
    SetSecurityGroupsCommand,
    SetSubnetsCommand,
};
export class ElasticLoadBalancingV2 extends ElasticLoadBalancingV2Client {
}
createAggregatedClient(commands, ElasticLoadBalancingV2);
