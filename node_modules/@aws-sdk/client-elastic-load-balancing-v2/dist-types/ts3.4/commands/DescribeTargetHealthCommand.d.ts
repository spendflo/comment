import { EndpointParameterInstructions } from "@smithy/middleware-endpoint";
import { Command as $Command } from "@smithy/smithy-client";
import {
  Handler,
  HttpHandlerOptions as __HttpHandlerOptions,
  MetadataBearer as __MetadataBearer,
  MiddlewareStack,
} from "@smithy/types";
import {
  ElasticLoadBalancingV2ClientResolvedConfig,
  ServiceInputTypes,
  ServiceOutputTypes,
} from "../ElasticLoadBalancingV2Client";
import {
  DescribeTargetHealthInput,
  DescribeTargetHealthOutput,
} from "../models/models_0";
export { __MetadataBearer, $Command };
export interface DescribeTargetHealthCommandInput
  extends DescribeTargetHealthInput {}
export interface DescribeTargetHealthCommandOutput
  extends DescribeTargetHealthOutput,
    __MetadataBearer {}
export declare class DescribeTargetHealthCommand extends $Command<
  DescribeTargetHealthCommandInput,
  DescribeTargetHealthCommandOutput,
  ElasticLoadBalancingV2ClientResolvedConfig
> {
  readonly input: DescribeTargetHealthCommandInput;
  static getEndpointParameterInstructions(): EndpointParameterInstructions;
  constructor(input: DescribeTargetHealthCommandInput);
  resolveMiddleware(
    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,
    configuration: ElasticLoadBalancingV2ClientResolvedConfig,
    options?: __HttpHandlerOptions
  ): Handler<
    DescribeTargetHealthCommandInput,
    DescribeTargetHealthCommandOutput
  >;
  private serialize;
  private deserialize;
}
