import type { ValidationIssue } from 'cspell-lib';
import type { Node } from 'estree';
import type { WorkerOptions } from '../common/options.js';
import type { NodeType } from './ASTNode.mjs';
type Suggestions = ValidationIssue['suggestionsEx'];
export interface Issue {
    start: number;
    end: number;
    word: string;
    severity: 'Forbidden' | 'Unknown' | 'Hint';
    suggestions: Suggestions;
    nodeType: NodeType;
}
type SpellCheckFn = typeof spellCheck;
export type SpellCheckSyncFn = (...p: Parameters<SpellCheckFn>) => Awaited<ReturnType<SpellCheckFn>>;
export declare function spellCheck(filename: string, text: string, root: Node, options: WorkerOptions): Promise<Issue[]>;
export {};
//# sourceMappingURL=spellCheck.d.mts.map